{
  /**
   * The airdrop executer's secret passphrase. Create separate ADM account for the executer.
   * Executer's ADM address will correspond this passPhrase.
   */
  "passphrase": "apple banana...",

  /**
   * The file to read addresses from.
   * Supported file formats: .txt, .csv, .json
   * .json file should have property "list" with array of addresses
   */
  "inputFile": "examples/example.list.csv",

  /**
   * Output path for list of addresses that bot couldn't send ADM to
   */
  "outputPath": "output",

  /**
   * List of nodes to execute transactions.
   * If one become unavailable, app will choose live one.
   */
  "nodes": [
    "https://bid.adamant.im",
    "http://localhost:36666",
    "https://endless.adamant.im",
    "https://clown.adamant.im",
    "https://unusual.adamant.im",
    "https://debate.adamant.im",
    "http://23.226.231.225:36666",
    "http://78.47.205.206:36666",
    "https://lake.adamant.im",
    "https://sunshine.adamant.im"
  ],

  /**
   * The app will use verbosity according to logLevel.
   * It can be none < error < warn < info < log.
   */
  "logLevel": "log",

  /**
   * Amount in ADM to send for each airdrop transaction
   */
  "amount": 1,

  /**
   * When set to true, skips duplicate addresses read from input file
   */
  "skipDuplicates": true
}
